name: Deploy Blog

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'yarn'

    - name: Install dependencies
      run: yarn install --frozen-lockfile --production=false

    - name: Build application
      run: yarn build

    - name: Set environment variables
      run: |
        echo "DOCKER_IMAGE=zxcyui6181/blog" >> $GITHUB_ENV
        echo "DOCKER_TAG=${{ github.sha }}" >> $GITHUB_ENV
        echo "SERVER_HOST=monsil-server" >> $GITHUB_ENV
        echo "SERVER_PORT=22" >> $GITHUB_ENV
        echo "SERVER_USER=min" >> $GITHUB_ENV
        echo "CONTAINER_NAME=blog" >> $GITHUB_ENV
        echo "CONTAINER_PORT=3001" >> $GITHUB_ENV
        echo "HOST_PORT=3001" >> $GITHUB_ENV
        echo "HOST=0.0.0.0" >> $GITHUB_ENV
        echo "NODE_ENV=production" >> $GITHUB_ENV
        echo "NEXT_TELEMETRY_DISABLED=1" >> $GITHUB_ENV
        echo "SKIP_DATABASE_CONNECTION=true" >> $GITHUB_ENV
        # Database Configuration
        echo "DB_HOST=${{ secrets.DB_HOST }}" >> $GITHUB_ENV
        echo "DB_PORT=${{ secrets.DB_PORT }}" >> $GITHUB_ENV
        echo "DB_NAME=${{ secrets.DB_NAME }}" >> $GITHUB_ENV
        echo "DB_USER=${{ secrets.DB_USER }}" >> $GITHUB_ENV
        echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV
        # Next Auth Configuration
        echo "NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}" >> $GITHUB_ENV
        echo "NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }}" >> $GITHUB_ENV
        # Google OAuth Configuration
        echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> $GITHUB_ENV
        echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> $GITHUB_ENV
        # OpenAI Configuration
        echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> $GITHUB_ENV
        # Cloudinary Configuration
        echo "CLOUDINARY_URL=${{ secrets.CLOUDINARY_URL }}" >> $GITHUB_ENV
        # MCP API Configuration
        echo "MCP_API_TOKEN=${{ secrets.MCP_API_TOKEN }}" >> $GITHUB_ENV

    - name: Build and push Docker image
      run: |
        docker build -t ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }} .
        docker push ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}

    - name: Deploy to server
      run: |
        ssh ${{ env.SERVER_USER }}@${{ env.SERVER_HOST }} << 'EOF'
          # Stop and remove existing container
          docker stop blog || true
          docker rm blog || true
          
          # Pull latest image
          docker pull ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
          
          # Run new container
          docker run -d \
            --name blog \
            --restart unless-stopped \
            -p ${{ env.HOST_PORT }}:${{ env.CONTAINER_PORT }} \
            -e NODE_ENV=${{ env.NODE_ENV }} \
            -e NEXT_TELEMETRY_DISABLED=${{ env.NEXT_TELEMETRY_DISABLED }} \
            -e DB_HOST=${{ env.DB_HOST }} \
            -e DB_PORT=${{ env.DB_PORT }} \
            -e DB_NAME=${{ env.DB_NAME }} \
            -e DB_USER=${{ env.DB_USER }} \
            -e DB_PASSWORD=${{ env.DB_PASSWORD }} \
            -e NEXTAUTH_SECRET=${{ env.NEXTAUTH_SECRET }} \
            -e NEXTAUTH_URL=${{ env.NEXTAUTH_URL }} \
            -e GOOGLE_CLIENT_ID=${{ env.GOOGLE_CLIENT_ID }} \
            -e GOOGLE_CLIENT_SECRET=${{ env.GOOGLE_CLIENT_SECRET }} \
            -e OPENAI_API_KEY=${{ env.OPENAI_API_KEY }} \
            -e CLOUDINARY_URL=${{ env.CLOUDINARY_URL }} \
            -e MCP_API_TOKEN=${{ env.MCP_API_TOKEN }} \
            ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
        EOF

 